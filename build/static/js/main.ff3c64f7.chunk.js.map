{"version":3,"sources":["components/Launcher.js","FhirClientContext.js","components/FhirClientProvider.js","components/Patient.js","components/Questionnaire.js","components/Home.js","components/App.js","index.js"],"names":["Launcher","React","Component","componentDidMount","SMART","authorize","clientId","scope","redirectUri","iss","completeInTarget","render","FhirClientContext","createContext","FhirClientProvider","ready","then","client","this","setState","error","createElement","Provider","value","state","Consumer","_ref","stack","props","children","PatientName","name","entry","find","nameRecord","use","given","join","family","PatientBanner","patient","gender","birthDate","Patient","constructor","super","loading","context","_loader","read","catch","message","contextType","Questionnaire","responses","setResponses","useState","handleChange","linkId","[object Object]","onSubmit","event","preventDefault","console","log","questionnaireData","item","map","key","htmlFor","text","type","id","onChange","e","target","Page","App","BrowserRouter","Route","path","component","Home","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ff3c64f7.chunk.js","sourcesContent":["import React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\n\n/**\n * Typically the launch page is an empty page with a `SMART.authorize`\n * call in it.\n *\n * This example demonstrates that the call to authorize can be postponed\n * and called manually. In this case we use ReactRouter which will match\n * the `/launch` path and render our component. Then, after our page is\n * rendered we start the auth flow.\n */\nexport default class Launcher extends React.Component {\n    /**\n     * This is configured to make a Standalone Launch, just in case it\n     * is loaded directly. An EHR can still launch it by passing `iss`\n     * and `launch` url parameters\n     */\n    componentDidMount() {\n        SMART.authorize({\n            clientId: \"my-client-id\",\n            scope: \"launch launch/patient patient/read offline_access\",\n            redirectUri: \"./app\",\n            iss:\n                \"https://launch.smarthealthit.org/v/r3/sim/\" +\n                \"eyJoIjoiMSIsImIiOiJmMDQ2MjkzNi1lYjRiLTRkYT\" +\n                \"EtYjQ1YS1mYmQ5NmViZjhjY2IiLCJlIjoic21hcnQt\" +\n                \"UHJhY3RpdGlvbmVyLTcxNjE0NTAyIn0/fhir\",\n\n            // WARNING: completeInTarget=true is needed to make this work\n            // in the codesandbox frame. It is otherwise not needed if the\n            // target is not another frame or window but since the entire\n            // example works in a frame here, it gets confused without\n            // setting this!\n            completeInTarget: true\n        });\n    }\n    /**\n     * Could also return `null` for empty page\n     */\n    render() {\n        return \"Launching...\";\n    }\n}\n","import React from \"react\";\nexport const FhirClientContext = React.createContext({});\n","import React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\nimport { FhirClientContext } from \"../FhirClientContext\";\n\nexport default class FhirClientProvider extends React.Component {\n  componentDidMount() {\n    SMART.ready().then(\n      (client) => this.setState({ client }),\n      (error) => this.setState({ error })\n    );\n  }\n\n  render() {\n    return (\n      <FhirClientContext.Provider value={this.state || {}}>\n        <FhirClientContext.Consumer>\n          {({ client, error }) => {\n            // any error that SMART.ready() may have been rejected with\n            if (error) {\n              return <pre>{error.stack}</pre>;\n            }\n\n            // if client is already available render the subtree\n            if (client) {\n              return this.props.children;\n            }\n\n            // client is undefined until SMART.ready() is fulfilled\n            return \"Authorizing...\";\n          }}\n        </FhirClientContext.Consumer>\n      </FhirClientContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport { FhirClientContext } from \"../FhirClientContext\";\n\nfunction PatientName({ name = [] }) {\n    let entry =\n        name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (!entry) {\n        return <h1>No Name</h1>;\n    }\n    return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\n}\n\nfunction PatientBanner(patient) {\n    return (\n        <div>\n            <PatientName name={patient.name} />\n            <span>\n                Gender: <b>{patient.gender}</b>,{\" \"}\n            </span>\n            <span>\n                DOB: <b>{patient.birthDate}</b>\n            </span>\n        </div>\n    );\n}\n\nexport default class Patient extends React.Component {\n    static contextType = FhirClientContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            patient: null,\n            error: null\n        };\n    }\n    componentDidMount() {\n        const client = this.context.client;\n        this._loader = client.patient\n            .read()\n            .then(patient => {\n                this.setState({ patient, loading: false, error: null });\n            })\n            .catch(error => {\n                this.setState({ error, loading: false });\n            });\n    }\n    render() {\n        const { error, loading, patient } = this.state;\n        if (loading) {\n            return null;\n        }\n        if (error) {\n            return error.message;\n        }\n        return <PatientBanner {...patient} />;\n    }\n}\n","import React, { useState } from 'react';\nimport questionnaireData from './questionnaire.json';\n\nconst Questionnaire = () => {\n  const [responses, setResponses] = useState({});\n\n  const handleChange = (linkId, value) => {\n    setResponses({ ...responses, [linkId]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Submitted responses:', responses);\n    // Add submission logic here (e.g., API call)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {questionnaireData.item.map((item) => (\n        <div key={item.linkId}>\n          <label htmlFor={item.linkId}>{item.text}</label>\n          {item.type === 'boolean' ? (\n            <select\n              id={item.linkId}\n              onChange={(e) => handleChange(item.linkId, e.target.value)}\n            >\n              <option value=\"\">Select...</option>\n              <option value=\"true\">Yes</option>\n              <option value=\"false\">No</option>\n            </select>\n          ) : (\n            <input\n              id={item.linkId}\n              type={item.type}\n              onChange={(e) => handleChange(item.linkId, e.target.value)}\n            />\n          )}\n        </div>\n      ))}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Questionnaire;\n","import React from \"react\";\nimport FhirClientProvider from \"./FhirClientProvider\";\nimport Patient from \"./Patient\";\nimport Questionnaire from \"./Questionnaire\";\n\n/**\n * Wraps everything into `FhirClientProvider` so that any component\n * can have access to the fhir client through the context.\n */\nexport default function Page() {\n    return (\n        <FhirClientProvider>\n            <Patient />\n            <hr />\n            <Questionnaire />\n            <br />\n        </FhirClientProvider>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Launcher from \"./Launcher\";\nimport Home from \"./Home\";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Route path=\"/app\" component={Home} />\n            <Route path=\"/\" component={Launcher} exact />\n        </BrowserRouter>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}